---
# Developer: Sharad Dumoliya
# Script name: main.yaml
# Description:  Grafana deployment
# Version: 1.0.0
# Date of development: 31-Mar-2020

- name: Checking if Grafana is installed in namespace {{grafana_namespace}}
  command: "{{helm_location}}helm ls -n {{grafana_namespace}}"
  register: if_grafana

- block:
    - debug:
        msg: "Grafana is already deployed in namespace {{grafana_namespace}}"

    - name: Check the deployed pod status in namespace {{grafana_namespace}}"
      command: kubectl -n  {{grafana_namespace}} get pods --field-selector=status.phase=Running
      register: grafana_pod_status

    - debug:
        var: grafana_pod_status.stdout_lines

    - name: Check version of Grafana Server installed in namespace {{grafana_namespace}}
      shell: kubectl exec -it -n {{grafana_namespace}} $(kubectl -n {{grafana_namespace}} get pods -o name) -- grafana-server -v
      register: grafana_version_status

    - debug:
        var: grafana_version_status.stdout_lines

    - name: Check if Grafana is accessible.
      uri:
        url: http://127.0.0.1:32323
        method: GET
        status_code: 200
      register: grafana_url_status

    - debug:
        var: grafana_url_status.msg


  when: "'grafana' in if_grafana.stdout and 'deployed' in if_grafana.stdout"

- name: Installing Grafana
  block:
    - name: Install Python Dependecies for helm
      pip:
        name:
          - pyhelm
          - grpcio
          - openshift
        extra_args: --user
        executable: /usr/bin/pip3

    - name: Create a k8s namespace
      k8s:
        name: "{{grafana_namespace}}"
        api_version: v1
        kind: Namespace
        state: present

    - name: Install helm chart for grafana in namespace {{grafana_namespace}}
      command: /usr/local/bin/helm install --namespace "{{grafana_namespace}}"  "{{grafana_release_name}}" stable/grafana --values "{{grafana_values}}"
      register: helm_grafana_result
      failed_when: "'ERROR' in helm_grafana_result.stderr"

    - debug:
        var: helm_grafana_result.stdout_lines

    - name: Wait for all grafana pods to be created
      command: kubectl -n "{{grafana_namespace}}" wait --for=condition=Ready pods --all --timeout=90s
      register: grafana_pod_status

    - debug:
        var: grafana_pod_status.stdout_lines

    - name: Check if Grafana is accessible.
      uri:
        url: http://127.0.0.1:32323
        method: GET
        status_code: 200
      register: grafana_url_status

    - debug:
        var: grafana_url_status.msg

  when: "'grafana' not in if_grafana.stdout and 'deployed' not in if_grafana.stdout"
