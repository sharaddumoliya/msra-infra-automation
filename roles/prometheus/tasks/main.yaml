---

# Developer: Sharad Dumoliya
# Script name: main.yaml
# Description:  prometheus deployment
# Version: 1.0.0
# Date of development: 31-Mar-2020

- name: Checking if Prometheus is installed in namespace {{prometheus_namespace}}
  command: "{{helm_location}}helm ls -n {{prometheus_namespace}}"
  register: if_prometheus

- block:
    - debug:
        msg: "Prometheus is already deployed in namespace {{prometheus_namespace}}"

    - name: Check the deployed pod status in namespace {{prometheus_namespace}}"
      command: kubectl -n  {{prometheus_namespace}} get pods --field-selector=status.phase=Running
      register: prometheus_pod_status

    - debug:
        var: prometheus_pod_status.stdout_lines

    - name: Check if Prometheus is accessible.
      uri:
        url: http://127.0.0.1:32322
        method: GET
        status_code: 200
      register: prometheus_url_status

    - debug:
        var: prometheus_url_status.msg

  when: "'prometheus' in if_prometheus.stdout and 'deployed' in if_prometheus.stdout"

- name: Installing Prometheus
  block:

    - name: Install Python Dependecies for helm
      pip:
        name:
          - pyhelm
          - grpcio
          - openshift
        extra_args: --user
        executable: /usr/bin/pip3

    - name: Create a k8s namespace
      k8s:
        name: "{{prometheus_namespace}}"
        api_version: v1
        kind: Namespace
        state: present

    - name: Install helm chart for prometheus
      command: /usr/local/bin/helm install --namespace "{{prometheus_namespace}}"  "{{prometheus_release_name}}" stable/prometheus --values "{{prometheus_values}}"
      register: helm_prometheus_result
      failed_when: "'ERROR' in helm_prometheus_result.stderr"

    - debug:
       var: helm_prometheus_result.stdout_lines

    - name: Wait for all prometheus pods to be created
      command: kubectl -n "{{prometheus_namespace}}" wait --for=condition=Ready pods --all --timeout=90s

    - name: Check if Prometheus is accessible.
      uri:
        url: http://127.0.0.1:32322
        method: GET
        status_code: 200
      register: prometheus_url_status

    - debug:
        var: prometheus_url_status.msg

  when: "'prometheus' not in if_prometheus.stdout and 'deployed' not in if_prometheus.stdout"
